// /**
//  * Copyright Â© Enstagram, Inc. All rights reserved.
//  * See COPYING.txt for license details.
//  */

//
//  Utilities
//  _____________________________________________

//
//  Convert values to unit specified in typography variables
//  ---------------------------------------------

@mixin lib-font-size-value(
    $_value
) {
  @if ($_value != false and $_value != '' and $font-size-unit-convert) {
      $fontValue: unit((($_value) * 1), $font-size-unit) / $font-size-unit-ratio;
  }
}
@mixin lib-font-size-value(
    $_value
) {
    @if ($font-size-unit-convert == false) {
      $fontValue: $_value;
  }
}

@mixin lib-visibility-hidden() {
    height: 0;
    visibility: hidden;
}

@mixin lib-visually-hidden() {
    border: 0;
    clip: rect(0, 0, 0, 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

@mixin lib-visually-hidden-reset() {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
}

//
//  Clearfix
//  ---------------------------------------------

@mixin lib-clearfix() {
    &:before,
    &:after {
        content: '';
        display: table;
    }

    &:after {
        clear: both;
    }
}

@mixin lib-clearer() {
    &:after {
        clear: both;
        content: '';
        display: table;
    }
}

//
//  Rotate
//  ---------------------------------------------

@mixin lib-rotate($_rotation) {
    -webkit-transform: rotate($_rotation); //  Use in 8 Safari
        -ms-transform: rotate($_rotation); //  Use in 9 IE
            transform: rotate($_rotation);
}

//
//  Remove spaces between elements with display: inline-block
//  ---------------------------------------------

@mixin lib-inline-block-space-container() {
    font-size: 0;
    letter-spacing: -1px;
    line-height: 0;
}

@mixin lib-inline-block-space-item(
    $_font-size: $font-size__base,
    $_line-height: normal
) {
    @include lib-font-size($_font-size);
    font-size: $_font-size;
    letter-spacing: normal;
    line-height: $_line-height;
}

//
//  Add any css property
//  ---------------------------------------------

@mixin lib-css(
    $_property,
    $_value,
    $_prefix: 0
) {
  @if ($_prefix == 1 and
    $_value != '' and
    $_value != false and
    extract($_value, 1) != false and
    extract($_value, 2) != false and
    extract($_value, 3) != false and
    extract($_value, 4) != false and
    extract($_value, 5) != false) {
      -webkit-#{$_property}: $_value;
      -moz-#{$_property}: $_value;
      -ms-#{$_property}: $_value;
    }
}

@mixin lib-css(
    $_property,
    $_value,
    $_prefix: 0
) {
  @if ($_value != '' and
    $_value != false and
    extract($_value, 1) != false and
    extract($_value, 2) != false and
    extract($_value, 3) != false and
    extract($_value, 4) != false and
    extract($_value, 5) != false) {
      $_property: $_value;
    }
}

//
//  Add url to property
//  ---------------------------------------------


$urls-resolved: false;

@mixin lib-url($_path) {
    $url: "${baseDir}${_path}";
}

@mixin lib-url(
    $_path,
    $_module
) {
  @if ($_module != false and $_module != '' and $urls-resolved = false) {
      $url: "${_module}::${_path}";
  }
}

@mixin lib-url(
    $_path,
    $_module
) {
  @if ($_module != false and $_module != '' and $urls-resolved = true) {
      $url: "${baseDir}${_module}/${_path}";
  }
}

//
//  Url existing check
//  ---------------------------------------------

@mixin lib-url-check($_path) {
    $lib-url-check-output: $_path;
}

@mixin lib-url-check($_path) {
  @if ($_path != false) {
      $lib-url-check-output: url($_path);
  }
}

//
//  Arrow
//  ---------------------------------------------

@mixin lib-arrow(
    $_position,
    $_size,
    $_color
) {
    border: $_size solid transparent;
    height: 0;
    width: 0;
    @include _lib-abbor_el($_position, $_color);
}

@mixin _lib-abbor_el(
    $_position,
    $_color
) {
  @if ($_position == left) {
      @include lib-css(border-right-color, $_color);
  }

  @if ($_position == right) {
      @include lib-css(border-left-color, $_color);
  }

  @if ($_position == up) {
      @include lib-css(border-bottom-color, $_color);
  }

  @if ($_position == down) {
      @include lib-css(border-top-color, $_color);
  }
}

//
//  Input placeholder
//  ---------------------------------------------

@mixin lib-input-placeholder(
    $_input-placeholder-color: $form-element-input-placeholder__color,
    $_input-placeholder-font-weight: $form-element-input__font-weight
) {
    &::-webkit-input-placeholder {
        @include lib-css(color, $_input-placeholder-color);
        @include lib-css(font-weight, $_input-placeholder-font-weight);
    }

    &:-moz-placeholder {
        @include lib-css(color, $_input-placeholder-color);
        @include lib-css(font-weight, $_input-placeholder-font-weight);
    }

    &::-moz-placeholder {
        @include lib-css(color, $_input-placeholder-color);
        @include lib-css(font-weight, $_input-placeholder-font-weight);
    }

    &:-ms-input-placeholder {
        @include lib-css(color, $_input-placeholder-color);
        @include lib-css(font-weight, $_input-placeholder-font-weight);
    }
}

//
//  Flex layout
//  ---------------------------------------------

@mixin lib-vendor-prefix-display(
    $_value: flex
) {
    display: -webkit-#{$_value};
    display: -ms-#{$_value}box;
    display: $_value;
}

@mixin lib-vendor-prefix-flex-grow(
    $_value: 0
) {
    -webkit-flex-grow: $_value;
            flex-grow: $_value;
}

@mixin lib-vendor-prefix-flex-shrink (
    $_value: 1
) {
    -webkit-flex-shrink: $_value;
            flex-shrink: $_value;
}

@mixin lib-vendor-prefix-flex-basis (
    $_value: auto
) {
    -webkit-flex-basis: $_value;
            flex-basis: $_value;
}

@mixin lib-vendor-prefix-flex-wrap (
    $_value: wrap
) {
    -webkit-flex-wrap: $_value;
            flex-wrap: $_value;
}

@mixin lib-vendor-prefix-flex-direction (
    $_value: column
) {
    -webkit-flex-direction: $_value;
        -ms-flex-direction: $_value;
            flex-direction: $_value;
}

@mixin lib-vendor-prefix-order (
    $_value: 0
) {
    -ms-flex-order: $_value;
     -webkit-order: $_value;
             order: $_value;
}

@mixin lib-vendor-box-align (
    $_value: stretch
) {
    -webkit-align-items: $_value;
        -ms-align-items: $_value;
            align-items: $_value;
}

@mixin lib-vendor-prefix-appearance (
    $value: none
) {
    -webkit-appearance: $value;
    -moz-appearance: $value;
    appearance: $value;
}

@mixin lib-vendor-prefix-column-count (
    $_value
) {
    -webkit-column-count: $_value;
       -moz-column-count: $_value;
            column-count: $_value;
}

//
//  Pointer for popups or dropdowns
//  ---------------------------------------------

@mixin lib-pointer(
    $_size: 6px,
    $_background-color: $color-white,
    $_border-color: $color-gray-light3,
    $_position__vertical: top,
    $_position__horizontal: left,
    $_position__vertical__value: -12px,
    $_position__horizontal__value: $indent__s,
    $_z-index: 99
) {
    &:before,
    &:after {
        content: '';
        position: absolute;
        display: block;
        width: 0;
        height: 0;
        border-bottom-style: solid;
    }

    &:before {
        @include lib-css($_position__horizontal, $_position__horizontal__value);
        @include lib-css($_position__vertical, $_position__vertical__value);
        @include lib-css(border, solid $_size - 1);
        @include lib-css(border-color, transparent transparent $_background-color transparent);
        @include lib-css(z-index, $_z-index);
    }

    &:after {
        @include lib-css($_position__horizontal, $_position__horizontal__value - 1);
        @include lib-css($_position__vertical, $_position__vertical__value - 2);
        @include lib-css(border, solid $_size);
        @include lib-css(border-color, transparent transparent $_border-color transparent);
        @include lib-css(z-index, $_z-index - 1);
    }
}
